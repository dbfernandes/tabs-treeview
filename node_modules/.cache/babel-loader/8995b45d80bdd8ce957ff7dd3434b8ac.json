{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { DndProvider as ReactDndProvider } from 'react-dnd';\nimport MultiBackend from 'dnd-multi-backend';\nexport var PreviewPortalContext = React.createContext(null);\nexport var DndProvider = function DndProvider(props) {\n  var previewPortal = useRef();\n  return /*#__PURE__*/React.createElement(PreviewPortalContext.Provider, {\n    value: previewPortal.current\n  }, /*#__PURE__*/React.createElement(ReactDndProvider, _extends({\n    backend: MultiBackend\n  }, props)), /*#__PURE__*/React.createElement(\"div\", {\n    ref: previewPortal\n  }));\n};\nDndProvider.propTypes = {\n  manager: PropTypes.any,\n  context: PropTypes.any,\n  options: PropTypes.any,\n  debugMode: PropTypes.bool\n};","map":{"version":3,"sources":["/home/david/dev/tabs-treeview/node_modules/react-dnd-multi-backend/dist/esm/components/DndProvider.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useRef","PropTypes","DndProvider","ReactDndProvider","MultiBackend","PreviewPortalContext","createContext","props","previewPortal","createElement","Provider","value","current","backend","ref","propTypes","manager","any","context","options","debugMode","bool"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAW,IAAIC,gBAAxB,QAAgD,WAAhD;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAO,IAAIC,oBAAoB,GAAGN,KAAK,CAACO,aAAN,CAAoB,IAApB,CAA3B;AACP,OAAO,IAAIJ,WAAW,GAAG,SAASA,WAAT,CAAqBK,KAArB,EAA4B;AACnD,MAAIC,aAAa,GAAGR,MAAM,EAA1B;AACA,SAAO,aAAaD,KAAK,CAACU,aAAN,CAAoBJ,oBAAoB,CAACK,QAAzC,EAAmD;AACrEC,IAAAA,KAAK,EAAEH,aAAa,CAACI;AADgD,GAAnD,EAEjB,aAAab,KAAK,CAACU,aAAN,CAAoBN,gBAApB,EAAsCjB,QAAQ,CAAC;AAC7D2B,IAAAA,OAAO,EAAET;AADoD,GAAD,EAE3DG,KAF2D,CAA9C,CAFI,EAIR,aAAaR,KAAK,CAACU,aAAN,CAAoB,KAApB,EAA2B;AAClDK,IAAAA,GAAG,EAAEN;AAD6C,GAA3B,CAJL,CAApB;AAOD,CATM;AAUPN,WAAW,CAACa,SAAZ,GAAwB;AACtBC,EAAAA,OAAO,EAAEf,SAAS,CAACgB,GADG;AAEtBC,EAAAA,OAAO,EAAEjB,SAAS,CAACgB,GAFG;AAGtBE,EAAAA,OAAO,EAAElB,SAAS,CAACgB,GAHG;AAItBG,EAAAA,SAAS,EAAEnB,SAAS,CAACoB;AAJC,CAAxB","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { DndProvider as ReactDndProvider } from 'react-dnd';\nimport MultiBackend from 'dnd-multi-backend';\nexport var PreviewPortalContext = React.createContext(null);\nexport var DndProvider = function DndProvider(props) {\n  var previewPortal = useRef();\n  return /*#__PURE__*/React.createElement(PreviewPortalContext.Provider, {\n    value: previewPortal.current\n  }, /*#__PURE__*/React.createElement(ReactDndProvider, _extends({\n    backend: MultiBackend\n  }, props)), /*#__PURE__*/React.createElement(\"div\", {\n    ref: previewPortal\n  }));\n};\nDndProvider.propTypes = {\n  manager: PropTypes.any,\n  context: PropTypes.any,\n  options: PropTypes.any,\n  debugMode: PropTypes.bool\n};"]},"metadata":{},"sourceType":"module"}