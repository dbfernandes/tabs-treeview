{"ast":null,"code":"import React, { useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport DnDPreview, { Context as PreviewContext } from 'react-dnd-preview';\nimport { useObservePreviews } from '../common';\nimport { PreviewPortalContext } from './DndProvider';\n\nvar Preview = function Preview(props) {\n  var enabled = useObservePreviews();\n  var portal = useContext(PreviewPortalContext);\n\n  if (!enabled) {\n    return null;\n  }\n\n  var result = /*#__PURE__*/React.createElement(DnDPreview, props);\n\n  if (portal) {\n    return /*#__PURE__*/ReactDOM.createPortal(result, portal);\n  }\n\n  return result;\n};\n\nPreview.Context = PreviewContext;\nPreview.propTypes = DnDPreview.propTypes;\nexport { Preview, PreviewContext };","map":{"version":3,"sources":["/home/david/dev/tabs-treeview/node_modules/react-dnd-multi-backend/dist/esm/components/Preview.js"],"names":["React","useContext","ReactDOM","DnDPreview","Context","PreviewContext","useObservePreviews","PreviewPortalContext","Preview","props","enabled","portal","result","createElement","createPortal","propTypes"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,IAAqBC,OAAO,IAAIC,cAAhC,QAAsD,mBAAtD;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,oBAAT,QAAqC,eAArC;;AAEA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACpC,MAAIC,OAAO,GAAGJ,kBAAkB,EAAhC;AACA,MAAIK,MAAM,GAAGV,UAAU,CAACM,oBAAD,CAAvB;;AAEA,MAAI,CAACG,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,MAAIE,MAAM,GAAG,aAAaZ,KAAK,CAACa,aAAN,CAAoBV,UAApB,EAAgCM,KAAhC,CAA1B;;AAEA,MAAIE,MAAJ,EAAY;AACV,WAAO,aAAaT,QAAQ,CAACY,YAAT,CAAsBF,MAAtB,EAA8BD,MAA9B,CAApB;AACD;;AAED,SAAOC,MAAP;AACD,CAfD;;AAiBAJ,OAAO,CAACJ,OAAR,GAAkBC,cAAlB;AACAG,OAAO,CAACO,SAAR,GAAoBZ,UAAU,CAACY,SAA/B;AACA,SAASP,OAAT,EAAkBH,cAAlB","sourcesContent":["import React, { useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport DnDPreview, { Context as PreviewContext } from 'react-dnd-preview';\nimport { useObservePreviews } from '../common';\nimport { PreviewPortalContext } from './DndProvider';\n\nvar Preview = function Preview(props) {\n  var enabled = useObservePreviews();\n  var portal = useContext(PreviewPortalContext);\n\n  if (!enabled) {\n    return null;\n  }\n\n  var result = /*#__PURE__*/React.createElement(DnDPreview, props);\n\n  if (portal) {\n    return /*#__PURE__*/ReactDOM.createPortal(result, portal);\n  }\n\n  return result;\n};\n\nPreview.Context = PreviewContext;\nPreview.propTypes = DnDPreview.propTypes;\nexport { Preview, PreviewContext };"]},"metadata":{},"sourceType":"module"}