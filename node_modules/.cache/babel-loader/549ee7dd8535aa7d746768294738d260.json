{"ast":null,"code":"var _eventNames;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { invariant } from '@react-dnd/invariant';\nimport { ListenerType } from './interfaces';\nimport { eventShouldStartDrag, eventShouldEndDrag, isTouchEvent } from './utils/predicates';\nimport { getEventClientOffset, getNodeClientOffset } from './utils/offsets';\nimport { distance, inAngleRanges } from './utils/math';\nimport { supportsPassive } from './utils/supportsPassive';\nimport { OptionsReader } from './OptionsReader';\nvar eventNames = (_eventNames = {}, _defineProperty(_eventNames, ListenerType.mouse, {\n  start: 'mousedown',\n  move: 'mousemove',\n  end: 'mouseup',\n  contextmenu: 'contextmenu'\n}), _defineProperty(_eventNames, ListenerType.touch, {\n  start: 'touchstart',\n  move: 'touchmove',\n  end: 'touchend'\n}), _defineProperty(_eventNames, ListenerType.keyboard, {\n  keydown: 'keydown'\n}), _eventNames);\nexport var TouchBackendImpl = /*#__PURE__*/function () {\n  // React-DnD Dependencies\n  // Internal State\n  // Patch for iOS 13, discussion over #1585\n  function TouchBackendImpl(manager, context, options) {\n    var _this = this;\n\n    _classCallCheck(this, TouchBackendImpl);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"actions\", void 0);\n\n    _defineProperty(this, \"monitor\", void 0);\n\n    _defineProperty(this, \"sourceNodes\", void 0);\n\n    _defineProperty(this, \"sourcePreviewNodes\", void 0);\n\n    _defineProperty(this, \"sourcePreviewNodeOptions\", void 0);\n\n    _defineProperty(this, \"targetNodes\", void 0);\n\n    _defineProperty(this, \"_mouseClientOffset\", void 0);\n\n    _defineProperty(this, \"_isScrolling\", void 0);\n\n    _defineProperty(this, \"listenerTypes\", void 0);\n\n    _defineProperty(this, \"moveStartSourceIds\", void 0);\n\n    _defineProperty(this, \"waitingForDelay\", void 0);\n\n    _defineProperty(this, \"timeout\", void 0);\n\n    _defineProperty(this, \"dragOverTargetIds\", void 0);\n\n    _defineProperty(this, \"draggedSourceNode\", void 0);\n\n    _defineProperty(this, \"draggedSourceNodeRemovalObserver\", void 0);\n\n    _defineProperty(this, \"lastTargetTouchFallback\", void 0);\n\n    _defineProperty(this, \"getSourceClientOffset\", function (sourceId) {\n      var element = _this.sourceNodes.get(sourceId);\n\n      return element && getNodeClientOffset(element);\n    });\n\n    _defineProperty(this, \"handleTopMoveStartCapture\", function (e) {\n      if (!eventShouldStartDrag(e)) {\n        return;\n      }\n\n      _this.moveStartSourceIds = [];\n    });\n\n    _defineProperty(this, \"handleMoveStart\", function (sourceId) {\n      // Just because we received an event doesn't necessarily mean we need to collect drag sources.\n      // We only collect start collecting drag sources on touch and left mouse events.\n      if (Array.isArray(_this.moveStartSourceIds)) {\n        _this.moveStartSourceIds.unshift(sourceId);\n      }\n    });\n\n    _defineProperty(this, \"handleTopMoveStart\", function (e) {\n      if (!eventShouldStartDrag(e)) {\n        return;\n      } // Don't prematurely preventDefault() here since it might:\n      // 1. Mess up scrolling\n      // 2. Mess up long tap (which brings up context menu)\n      // 3. If there's an anchor link as a child, tap won't be triggered on link\n\n\n      var clientOffset = getEventClientOffset(e);\n\n      if (clientOffset) {\n        if (isTouchEvent(e)) {\n          _this.lastTargetTouchFallback = e.targetTouches[0];\n        }\n\n        _this._mouseClientOffset = clientOffset;\n      }\n\n      _this.waitingForDelay = false;\n    });\n\n    _defineProperty(this, \"handleTopMoveStartDelay\", function (e) {\n      if (!eventShouldStartDrag(e)) {\n        return;\n      }\n\n      var delay = e.type === eventNames.touch.start ? _this.options.delayTouchStart : _this.options.delayMouseStart;\n      _this.timeout = setTimeout(_this.handleTopMoveStart.bind(_this, e), delay);\n      _this.waitingForDelay = true;\n    });\n\n    _defineProperty(this, \"handleTopMoveCapture\", function () {\n      _this.dragOverTargetIds = [];\n    });\n\n    _defineProperty(this, \"handleMove\", function (_evt, targetId) {\n      if (_this.dragOverTargetIds) {\n        _this.dragOverTargetIds.unshift(targetId);\n      }\n    });\n\n    _defineProperty(this, \"handleTopMove\", function (e) {\n      if (_this.timeout) {\n        clearTimeout(_this.timeout);\n      }\n\n      if (!_this.document || _this.waitingForDelay) {\n        return;\n      }\n\n      var moveStartSourceIds = _this.moveStartSourceIds,\n          dragOverTargetIds = _this.dragOverTargetIds;\n      var enableHoverOutsideTarget = _this.options.enableHoverOutsideTarget;\n      var clientOffset = getEventClientOffset(e, _this.lastTargetTouchFallback);\n\n      if (!clientOffset) {\n        return;\n      } // If the touch move started as a scroll, or is is between the scroll angles\n\n\n      if (_this._isScrolling || !_this.monitor.isDragging() && inAngleRanges(_this._mouseClientOffset.x || 0, _this._mouseClientOffset.y || 0, clientOffset.x, clientOffset.y, _this.options.scrollAngleRanges)) {\n        _this._isScrolling = true;\n        return;\n      } // If we're not dragging and we've moved a little, that counts as a drag start\n\n\n      if (!_this.monitor.isDragging() && // eslint-disable-next-line no-prototype-builtins\n      _this._mouseClientOffset.hasOwnProperty('x') && moveStartSourceIds && distance(_this._mouseClientOffset.x || 0, _this._mouseClientOffset.y || 0, clientOffset.x, clientOffset.y) > (_this.options.touchSlop ? _this.options.touchSlop : 0)) {\n        _this.moveStartSourceIds = undefined;\n\n        _this.actions.beginDrag(moveStartSourceIds, {\n          clientOffset: _this._mouseClientOffset,\n          getSourceClientOffset: _this.getSourceClientOffset,\n          publishSource: false\n        });\n      }\n\n      if (!_this.monitor.isDragging()) {\n        return;\n      }\n\n      var sourceNode = _this.sourceNodes.get(_this.monitor.getSourceId());\n\n      _this.installSourceNodeRemovalObserver(sourceNode);\n\n      _this.actions.publishDragSource();\n\n      if (e.cancelable) e.preventDefault(); // Get the node elements of the hovered DropTargets\n\n      var dragOverTargetNodes = (dragOverTargetIds || []).map(function (key) {\n        return _this.targetNodes.get(key);\n      }).filter(function (e) {\n        return !!e;\n      }); // Get the a ordered list of nodes that are touched by\n\n      var elementsAtPoint = _this.options.getDropTargetElementsAtPoint ? _this.options.getDropTargetElementsAtPoint(clientOffset.x, clientOffset.y, dragOverTargetNodes) : _this.document.elementsFromPoint(clientOffset.x, clientOffset.y); // Extend list with parents that are not receiving elementsFromPoint events (size 0 elements and svg groups)\n\n      var elementsAtPointExtended = [];\n\n      for (var nodeId in elementsAtPoint) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!elementsAtPoint.hasOwnProperty(nodeId)) {\n          continue;\n        }\n\n        var currentNode = elementsAtPoint[nodeId];\n        elementsAtPointExtended.push(currentNode);\n\n        while (currentNode) {\n          currentNode = currentNode.parentElement;\n\n          if (currentNode && elementsAtPointExtended.indexOf(currentNode) === -1) {\n            elementsAtPointExtended.push(currentNode);\n          }\n        }\n      }\n\n      var orderedDragOverTargetIds = elementsAtPointExtended // Filter off nodes that arent a hovered DropTargets nodes\n      .filter(function (node) {\n        return dragOverTargetNodes.indexOf(node) > -1;\n      }) // Map back the nodes elements to targetIds\n      .map(function (node) {\n        return _this._getDropTargetId(node);\n      }) // Filter off possible null rows\n      .filter(function (node) {\n        return !!node;\n      }).filter(function (id, index, ids) {\n        return ids.indexOf(id) === index;\n      }); // Invoke hover for drop targets when source node is still over and pointer is outside\n\n      if (enableHoverOutsideTarget) {\n        for (var targetId in _this.targetNodes) {\n          var targetNode = _this.targetNodes.get(targetId);\n\n          if (sourceNode && targetNode && targetNode.contains(sourceNode) && orderedDragOverTargetIds.indexOf(targetId) === -1) {\n            orderedDragOverTargetIds.unshift(targetId);\n            break;\n          }\n        }\n      } // Reverse order because dnd-core reverse it before calling the DropTarget drop methods\n\n\n      orderedDragOverTargetIds.reverse();\n\n      _this.actions.hover(orderedDragOverTargetIds, {\n        clientOffset: clientOffset\n      });\n    });\n\n    _defineProperty(this, \"_getDropTargetId\", function (node) {\n      var keys = _this.targetNodes.keys();\n\n      var next = keys.next();\n\n      while (next.done === false) {\n        var targetId = next.value;\n\n        if (node === _this.targetNodes.get(targetId)) {\n          return targetId;\n        } else {\n          next = keys.next();\n        }\n      }\n\n      return undefined;\n    });\n\n    _defineProperty(this, \"handleTopMoveEndCapture\", function (e) {\n      _this._isScrolling = false;\n      _this.lastTargetTouchFallback = undefined;\n\n      if (!eventShouldEndDrag(e)) {\n        return;\n      }\n\n      if (!_this.monitor.isDragging() || _this.monitor.didDrop()) {\n        _this.moveStartSourceIds = undefined;\n        return;\n      }\n\n      if (e.cancelable) e.preventDefault();\n      _this._mouseClientOffset = {};\n\n      _this.uninstallSourceNodeRemovalObserver();\n\n      _this.actions.drop();\n\n      _this.actions.endDrag();\n    });\n\n    _defineProperty(this, \"handleCancelOnEscape\", function (e) {\n      if (e.key === 'Escape' && _this.monitor.isDragging()) {\n        _this._mouseClientOffset = {};\n\n        _this.uninstallSourceNodeRemovalObserver();\n\n        _this.actions.endDrag();\n      }\n    });\n\n    this.options = new OptionsReader(options, context);\n    this.actions = manager.getActions();\n    this.monitor = manager.getMonitor();\n    this.sourceNodes = new Map();\n    this.sourcePreviewNodes = new Map();\n    this.sourcePreviewNodeOptions = new Map();\n    this.targetNodes = new Map();\n    this.listenerTypes = [];\n    this._mouseClientOffset = {};\n    this._isScrolling = false;\n\n    if (this.options.enableMouseEvents) {\n      this.listenerTypes.push(ListenerType.mouse);\n    }\n\n    if (this.options.enableTouchEvents) {\n      this.listenerTypes.push(ListenerType.touch);\n    }\n\n    if (this.options.enableKeyboardEvents) {\n      this.listenerTypes.push(ListenerType.keyboard);\n    }\n  }\n  /**\n   * Generate profiling statistics for the HTML5Backend.\n   */\n\n\n  _createClass(TouchBackendImpl, [{\n    key: \"profile\",\n    value: function profile() {\n      var _this$dragOverTargetI;\n\n      return {\n        sourceNodes: this.sourceNodes.size,\n        sourcePreviewNodes: this.sourcePreviewNodes.size,\n        sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n        targetNodes: this.targetNodes.size,\n        dragOverTargetIds: ((_this$dragOverTargetI = this.dragOverTargetIds) === null || _this$dragOverTargetI === void 0 ? void 0 : _this$dragOverTargetI.length) || 0\n      };\n    } // public for test\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.options.document;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      var root = this.options.rootElement;\n\n      if (!root) {\n        return;\n      }\n\n      invariant(!TouchBackendImpl.isSetUp, 'Cannot have two Touch backends at the same time.');\n      TouchBackendImpl.isSetUp = true;\n      this.addEventListener(root, 'start', this.getTopMoveStartHandler());\n      this.addEventListener(root, 'start', this.handleTopMoveStartCapture, true);\n      this.addEventListener(root, 'move', this.handleTopMove);\n      this.addEventListener(root, 'move', this.handleTopMoveCapture, true);\n      this.addEventListener(root, 'end', this.handleTopMoveEndCapture, true);\n\n      if (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n        this.addEventListener(root, 'contextmenu', this.handleTopMoveEndCapture);\n      }\n\n      if (this.options.enableKeyboardEvents) {\n        this.addEventListener(root, 'keydown', this.handleCancelOnEscape, true);\n      }\n    }\n  }, {\n    key: \"teardown\",\n    value: function teardown() {\n      var root = this.options.rootElement;\n\n      if (!root) {\n        return;\n      }\n\n      TouchBackendImpl.isSetUp = false;\n      this._mouseClientOffset = {};\n      this.removeEventListener(root, 'start', this.handleTopMoveStartCapture, true);\n      this.removeEventListener(root, 'start', this.handleTopMoveStart);\n      this.removeEventListener(root, 'move', this.handleTopMoveCapture, true);\n      this.removeEventListener(root, 'move', this.handleTopMove);\n      this.removeEventListener(root, 'end', this.handleTopMoveEndCapture, true);\n\n      if (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n        this.removeEventListener(root, 'contextmenu', this.handleTopMoveEndCapture);\n      }\n\n      if (this.options.enableKeyboardEvents) {\n        this.removeEventListener(root, 'keydown', this.handleCancelOnEscape, true);\n      }\n\n      this.uninstallSourceNodeRemovalObserver();\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(subject, event, handler, capture) {\n      var options = supportsPassive ? {\n        capture: capture,\n        passive: false\n      } : capture;\n      this.listenerTypes.forEach(function (listenerType) {\n        var evt = eventNames[listenerType][event];\n\n        if (evt) {\n          subject.addEventListener(evt, handler, options);\n        }\n      });\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(subject, event, handler, capture) {\n      var options = supportsPassive ? {\n        capture: capture,\n        passive: false\n      } : capture;\n      this.listenerTypes.forEach(function (listenerType) {\n        var evt = eventNames[listenerType][event];\n\n        if (evt) {\n          subject.removeEventListener(evt, handler, options);\n        }\n      });\n    }\n  }, {\n    key: \"connectDragSource\",\n    value: function connectDragSource(sourceId, node) {\n      var _this2 = this;\n\n      var handleMoveStart = this.handleMoveStart.bind(this, sourceId);\n      this.sourceNodes.set(sourceId, node);\n      this.addEventListener(node, 'start', handleMoveStart);\n      return function () {\n        _this2.sourceNodes.delete(sourceId);\n\n        _this2.removeEventListener(node, 'start', handleMoveStart);\n      };\n    }\n  }, {\n    key: \"connectDragPreview\",\n    value: function connectDragPreview(sourceId, node, options) {\n      var _this3 = this;\n\n      this.sourcePreviewNodeOptions.set(sourceId, options);\n      this.sourcePreviewNodes.set(sourceId, node);\n      return function () {\n        _this3.sourcePreviewNodes.delete(sourceId);\n\n        _this3.sourcePreviewNodeOptions.delete(sourceId);\n      };\n    }\n  }, {\n    key: \"connectDropTarget\",\n    value: function connectDropTarget(targetId, node) {\n      var _this4 = this;\n\n      var root = this.options.rootElement;\n\n      if (!this.document || !root) {\n        return function () {\n          /* noop */\n        };\n      }\n\n      var handleMove = function handleMove(e) {\n        if (!_this4.document || !root || !_this4.monitor.isDragging()) {\n          return;\n        }\n\n        var coords;\n        /**\n         * Grab the coordinates for the current mouse/touch position\n         */\n\n        switch (e.type) {\n          case eventNames.mouse.move:\n            coords = {\n              x: e.clientX,\n              y: e.clientY\n            };\n            break;\n\n          case eventNames.touch.move:\n            coords = {\n              x: e.touches[0].clientX,\n              y: e.touches[0].clientY\n            };\n            break;\n        }\n        /**\n         * Use the coordinates to grab the element the drag ended on.\n         * If the element is the same as the target node (or any of it's children) then we have hit a drop target and can handle the move.\n         */\n\n\n        var droppedOn = coords != null ? _this4.document.elementFromPoint(coords.x, coords.y) : undefined;\n        var childMatch = droppedOn && node.contains(droppedOn);\n\n        if (droppedOn === node || childMatch) {\n          return _this4.handleMove(e, targetId);\n        }\n      };\n      /**\n       * Attaching the event listener to the body so that touchmove will work while dragging over multiple target elements.\n       */\n\n\n      this.addEventListener(this.document.body, 'move', handleMove);\n      this.targetNodes.set(targetId, node);\n      return function () {\n        if (_this4.document) {\n          _this4.targetNodes.delete(targetId);\n\n          _this4.removeEventListener(_this4.document.body, 'move', handleMove);\n        }\n      };\n    }\n  }, {\n    key: \"getTopMoveStartHandler\",\n    value: function getTopMoveStartHandler() {\n      if (!this.options.delayTouchStart && !this.options.delayMouseStart) {\n        return this.handleTopMoveStart;\n      }\n\n      return this.handleTopMoveStartDelay;\n    }\n  }, {\n    key: \"installSourceNodeRemovalObserver\",\n    value: function installSourceNodeRemovalObserver(node) {\n      var _this5 = this;\n\n      this.uninstallSourceNodeRemovalObserver();\n      this.draggedSourceNode = node;\n      this.draggedSourceNodeRemovalObserver = new MutationObserver(function () {\n        if (node && !node.parentElement) {\n          _this5.resurrectSourceNode();\n\n          _this5.uninstallSourceNodeRemovalObserver();\n        }\n      });\n\n      if (!node || !node.parentElement) {\n        return;\n      }\n\n      this.draggedSourceNodeRemovalObserver.observe(node.parentElement, {\n        childList: true\n      });\n    }\n  }, {\n    key: \"resurrectSourceNode\",\n    value: function resurrectSourceNode() {\n      if (this.document && this.draggedSourceNode) {\n        this.draggedSourceNode.style.display = 'none';\n        this.draggedSourceNode.removeAttribute('data-reactid');\n        this.document.body.appendChild(this.draggedSourceNode);\n      }\n    }\n  }, {\n    key: \"uninstallSourceNodeRemovalObserver\",\n    value: function uninstallSourceNodeRemovalObserver() {\n      if (this.draggedSourceNodeRemovalObserver) {\n        this.draggedSourceNodeRemovalObserver.disconnect();\n      }\n\n      this.draggedSourceNodeRemovalObserver = undefined;\n      this.draggedSourceNode = undefined;\n    }\n  }]);\n\n  return TouchBackendImpl;\n}();\n\n_defineProperty(TouchBackendImpl, \"isSetUp\", void 0);","map":{"version":3,"sources":["/home/david/dev/tabs-treeview/node_modules/react-dnd-touch-backend/dist/esm/TouchBackendImpl.js"],"names":["_eventNames","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","invariant","ListenerType","eventShouldStartDrag","eventShouldEndDrag","isTouchEvent","getEventClientOffset","getNodeClientOffset","distance","inAngleRanges","supportsPassive","OptionsReader","eventNames","mouse","start","move","end","contextmenu","touch","keyboard","keydown","TouchBackendImpl","manager","context","options","_this","sourceId","element","sourceNodes","get","e","moveStartSourceIds","Array","isArray","unshift","clientOffset","lastTargetTouchFallback","targetTouches","_mouseClientOffset","waitingForDelay","delay","type","delayTouchStart","delayMouseStart","timeout","setTimeout","handleTopMoveStart","bind","dragOverTargetIds","_evt","targetId","clearTimeout","document","enableHoverOutsideTarget","_isScrolling","monitor","isDragging","x","y","scrollAngleRanges","hasOwnProperty","touchSlop","undefined","actions","beginDrag","getSourceClientOffset","publishSource","sourceNode","getSourceId","installSourceNodeRemovalObserver","publishDragSource","cancelable","preventDefault","dragOverTargetNodes","map","targetNodes","filter","elementsAtPoint","getDropTargetElementsAtPoint","elementsFromPoint","elementsAtPointExtended","nodeId","currentNode","push","parentElement","indexOf","orderedDragOverTargetIds","node","_getDropTargetId","id","index","ids","targetNode","contains","reverse","hover","keys","next","done","didDrop","uninstallSourceNodeRemovalObserver","drop","endDrag","getActions","getMonitor","Map","sourcePreviewNodes","sourcePreviewNodeOptions","listenerTypes","enableMouseEvents","enableTouchEvents","enableKeyboardEvents","profile","_this$dragOverTargetI","size","setup","root","rootElement","isSetUp","addEventListener","getTopMoveStartHandler","handleTopMoveStartCapture","handleTopMove","handleTopMoveCapture","handleTopMoveEndCapture","ignoreContextMenu","handleCancelOnEscape","teardown","removeEventListener","subject","event","handler","capture","passive","forEach","listenerType","evt","connectDragSource","_this2","handleMoveStart","set","delete","connectDragPreview","_this3","connectDropTarget","_this4","handleMove","coords","clientX","clientY","touches","droppedOn","elementFromPoint","childMatch","body","handleTopMoveStartDelay","_this5","draggedSourceNode","draggedSourceNodeRemovalObserver","MutationObserver","resurrectSourceNode","observe","childList","style","display","removeAttribute","appendChild","disconnect"],"mappings":"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","sourcesContent":["var _eventNames;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { invariant } from '@react-dnd/invariant';\nimport { ListenerType } from './interfaces';\nimport { eventShouldStartDrag, eventShouldEndDrag, isTouchEvent } from './utils/predicates';\nimport { getEventClientOffset, getNodeClientOffset } from './utils/offsets';\nimport { distance, inAngleRanges } from './utils/math';\nimport { supportsPassive } from './utils/supportsPassive';\nimport { OptionsReader } from './OptionsReader';\nvar eventNames = (_eventNames = {}, _defineProperty(_eventNames, ListenerType.mouse, {\n  start: 'mousedown',\n  move: 'mousemove',\n  end: 'mouseup',\n  contextmenu: 'contextmenu'\n}), _defineProperty(_eventNames, ListenerType.touch, {\n  start: 'touchstart',\n  move: 'touchmove',\n  end: 'touchend'\n}), _defineProperty(_eventNames, ListenerType.keyboard, {\n  keydown: 'keydown'\n}), _eventNames);\nexport var TouchBackendImpl = /*#__PURE__*/function () {\n  // React-DnD Dependencies\n  // Internal State\n  // Patch for iOS 13, discussion over #1585\n  function TouchBackendImpl(manager, context, options) {\n    var _this = this;\n\n    _classCallCheck(this, TouchBackendImpl);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"actions\", void 0);\n\n    _defineProperty(this, \"monitor\", void 0);\n\n    _defineProperty(this, \"sourceNodes\", void 0);\n\n    _defineProperty(this, \"sourcePreviewNodes\", void 0);\n\n    _defineProperty(this, \"sourcePreviewNodeOptions\", void 0);\n\n    _defineProperty(this, \"targetNodes\", void 0);\n\n    _defineProperty(this, \"_mouseClientOffset\", void 0);\n\n    _defineProperty(this, \"_isScrolling\", void 0);\n\n    _defineProperty(this, \"listenerTypes\", void 0);\n\n    _defineProperty(this, \"moveStartSourceIds\", void 0);\n\n    _defineProperty(this, \"waitingForDelay\", void 0);\n\n    _defineProperty(this, \"timeout\", void 0);\n\n    _defineProperty(this, \"dragOverTargetIds\", void 0);\n\n    _defineProperty(this, \"draggedSourceNode\", void 0);\n\n    _defineProperty(this, \"draggedSourceNodeRemovalObserver\", void 0);\n\n    _defineProperty(this, \"lastTargetTouchFallback\", void 0);\n\n    _defineProperty(this, \"getSourceClientOffset\", function (sourceId) {\n      var element = _this.sourceNodes.get(sourceId);\n\n      return element && getNodeClientOffset(element);\n    });\n\n    _defineProperty(this, \"handleTopMoveStartCapture\", function (e) {\n      if (!eventShouldStartDrag(e)) {\n        return;\n      }\n\n      _this.moveStartSourceIds = [];\n    });\n\n    _defineProperty(this, \"handleMoveStart\", function (sourceId) {\n      // Just because we received an event doesn't necessarily mean we need to collect drag sources.\n      // We only collect start collecting drag sources on touch and left mouse events.\n      if (Array.isArray(_this.moveStartSourceIds)) {\n        _this.moveStartSourceIds.unshift(sourceId);\n      }\n    });\n\n    _defineProperty(this, \"handleTopMoveStart\", function (e) {\n      if (!eventShouldStartDrag(e)) {\n        return;\n      } // Don't prematurely preventDefault() here since it might:\n      // 1. Mess up scrolling\n      // 2. Mess up long tap (which brings up context menu)\n      // 3. If there's an anchor link as a child, tap won't be triggered on link\n\n\n      var clientOffset = getEventClientOffset(e);\n\n      if (clientOffset) {\n        if (isTouchEvent(e)) {\n          _this.lastTargetTouchFallback = e.targetTouches[0];\n        }\n\n        _this._mouseClientOffset = clientOffset;\n      }\n\n      _this.waitingForDelay = false;\n    });\n\n    _defineProperty(this, \"handleTopMoveStartDelay\", function (e) {\n      if (!eventShouldStartDrag(e)) {\n        return;\n      }\n\n      var delay = e.type === eventNames.touch.start ? _this.options.delayTouchStart : _this.options.delayMouseStart;\n      _this.timeout = setTimeout(_this.handleTopMoveStart.bind(_this, e), delay);\n      _this.waitingForDelay = true;\n    });\n\n    _defineProperty(this, \"handleTopMoveCapture\", function () {\n      _this.dragOverTargetIds = [];\n    });\n\n    _defineProperty(this, \"handleMove\", function (_evt, targetId) {\n      if (_this.dragOverTargetIds) {\n        _this.dragOverTargetIds.unshift(targetId);\n      }\n    });\n\n    _defineProperty(this, \"handleTopMove\", function (e) {\n      if (_this.timeout) {\n        clearTimeout(_this.timeout);\n      }\n\n      if (!_this.document || _this.waitingForDelay) {\n        return;\n      }\n\n      var moveStartSourceIds = _this.moveStartSourceIds,\n          dragOverTargetIds = _this.dragOverTargetIds;\n      var enableHoverOutsideTarget = _this.options.enableHoverOutsideTarget;\n      var clientOffset = getEventClientOffset(e, _this.lastTargetTouchFallback);\n\n      if (!clientOffset) {\n        return;\n      } // If the touch move started as a scroll, or is is between the scroll angles\n\n\n      if (_this._isScrolling || !_this.monitor.isDragging() && inAngleRanges(_this._mouseClientOffset.x || 0, _this._mouseClientOffset.y || 0, clientOffset.x, clientOffset.y, _this.options.scrollAngleRanges)) {\n        _this._isScrolling = true;\n        return;\n      } // If we're not dragging and we've moved a little, that counts as a drag start\n\n\n      if (!_this.monitor.isDragging() && // eslint-disable-next-line no-prototype-builtins\n      _this._mouseClientOffset.hasOwnProperty('x') && moveStartSourceIds && distance(_this._mouseClientOffset.x || 0, _this._mouseClientOffset.y || 0, clientOffset.x, clientOffset.y) > (_this.options.touchSlop ? _this.options.touchSlop : 0)) {\n        _this.moveStartSourceIds = undefined;\n\n        _this.actions.beginDrag(moveStartSourceIds, {\n          clientOffset: _this._mouseClientOffset,\n          getSourceClientOffset: _this.getSourceClientOffset,\n          publishSource: false\n        });\n      }\n\n      if (!_this.monitor.isDragging()) {\n        return;\n      }\n\n      var sourceNode = _this.sourceNodes.get(_this.monitor.getSourceId());\n\n      _this.installSourceNodeRemovalObserver(sourceNode);\n\n      _this.actions.publishDragSource();\n\n      if (e.cancelable) e.preventDefault(); // Get the node elements of the hovered DropTargets\n\n      var dragOverTargetNodes = (dragOverTargetIds || []).map(function (key) {\n        return _this.targetNodes.get(key);\n      }).filter(function (e) {\n        return !!e;\n      }); // Get the a ordered list of nodes that are touched by\n\n      var elementsAtPoint = _this.options.getDropTargetElementsAtPoint ? _this.options.getDropTargetElementsAtPoint(clientOffset.x, clientOffset.y, dragOverTargetNodes) : _this.document.elementsFromPoint(clientOffset.x, clientOffset.y); // Extend list with parents that are not receiving elementsFromPoint events (size 0 elements and svg groups)\n\n      var elementsAtPointExtended = [];\n\n      for (var nodeId in elementsAtPoint) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!elementsAtPoint.hasOwnProperty(nodeId)) {\n          continue;\n        }\n\n        var currentNode = elementsAtPoint[nodeId];\n        elementsAtPointExtended.push(currentNode);\n\n        while (currentNode) {\n          currentNode = currentNode.parentElement;\n\n          if (currentNode && elementsAtPointExtended.indexOf(currentNode) === -1) {\n            elementsAtPointExtended.push(currentNode);\n          }\n        }\n      }\n\n      var orderedDragOverTargetIds = elementsAtPointExtended // Filter off nodes that arent a hovered DropTargets nodes\n      .filter(function (node) {\n        return dragOverTargetNodes.indexOf(node) > -1;\n      }) // Map back the nodes elements to targetIds\n      .map(function (node) {\n        return _this._getDropTargetId(node);\n      }) // Filter off possible null rows\n      .filter(function (node) {\n        return !!node;\n      }).filter(function (id, index, ids) {\n        return ids.indexOf(id) === index;\n      }); // Invoke hover for drop targets when source node is still over and pointer is outside\n\n      if (enableHoverOutsideTarget) {\n        for (var targetId in _this.targetNodes) {\n          var targetNode = _this.targetNodes.get(targetId);\n\n          if (sourceNode && targetNode && targetNode.contains(sourceNode) && orderedDragOverTargetIds.indexOf(targetId) === -1) {\n            orderedDragOverTargetIds.unshift(targetId);\n            break;\n          }\n        }\n      } // Reverse order because dnd-core reverse it before calling the DropTarget drop methods\n\n\n      orderedDragOverTargetIds.reverse();\n\n      _this.actions.hover(orderedDragOverTargetIds, {\n        clientOffset: clientOffset\n      });\n    });\n\n    _defineProperty(this, \"_getDropTargetId\", function (node) {\n      var keys = _this.targetNodes.keys();\n\n      var next = keys.next();\n\n      while (next.done === false) {\n        var targetId = next.value;\n\n        if (node === _this.targetNodes.get(targetId)) {\n          return targetId;\n        } else {\n          next = keys.next();\n        }\n      }\n\n      return undefined;\n    });\n\n    _defineProperty(this, \"handleTopMoveEndCapture\", function (e) {\n      _this._isScrolling = false;\n      _this.lastTargetTouchFallback = undefined;\n\n      if (!eventShouldEndDrag(e)) {\n        return;\n      }\n\n      if (!_this.monitor.isDragging() || _this.monitor.didDrop()) {\n        _this.moveStartSourceIds = undefined;\n        return;\n      }\n\n      if (e.cancelable) e.preventDefault();\n      _this._mouseClientOffset = {};\n\n      _this.uninstallSourceNodeRemovalObserver();\n\n      _this.actions.drop();\n\n      _this.actions.endDrag();\n    });\n\n    _defineProperty(this, \"handleCancelOnEscape\", function (e) {\n      if (e.key === 'Escape' && _this.monitor.isDragging()) {\n        _this._mouseClientOffset = {};\n\n        _this.uninstallSourceNodeRemovalObserver();\n\n        _this.actions.endDrag();\n      }\n    });\n\n    this.options = new OptionsReader(options, context);\n    this.actions = manager.getActions();\n    this.monitor = manager.getMonitor();\n    this.sourceNodes = new Map();\n    this.sourcePreviewNodes = new Map();\n    this.sourcePreviewNodeOptions = new Map();\n    this.targetNodes = new Map();\n    this.listenerTypes = [];\n    this._mouseClientOffset = {};\n    this._isScrolling = false;\n\n    if (this.options.enableMouseEvents) {\n      this.listenerTypes.push(ListenerType.mouse);\n    }\n\n    if (this.options.enableTouchEvents) {\n      this.listenerTypes.push(ListenerType.touch);\n    }\n\n    if (this.options.enableKeyboardEvents) {\n      this.listenerTypes.push(ListenerType.keyboard);\n    }\n  }\n  /**\n   * Generate profiling statistics for the HTML5Backend.\n   */\n\n\n  _createClass(TouchBackendImpl, [{\n    key: \"profile\",\n    value: function profile() {\n      var _this$dragOverTargetI;\n\n      return {\n        sourceNodes: this.sourceNodes.size,\n        sourcePreviewNodes: this.sourcePreviewNodes.size,\n        sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n        targetNodes: this.targetNodes.size,\n        dragOverTargetIds: ((_this$dragOverTargetI = this.dragOverTargetIds) === null || _this$dragOverTargetI === void 0 ? void 0 : _this$dragOverTargetI.length) || 0\n      };\n    } // public for test\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.options.document;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      var root = this.options.rootElement;\n\n      if (!root) {\n        return;\n      }\n\n      invariant(!TouchBackendImpl.isSetUp, 'Cannot have two Touch backends at the same time.');\n      TouchBackendImpl.isSetUp = true;\n      this.addEventListener(root, 'start', this.getTopMoveStartHandler());\n      this.addEventListener(root, 'start', this.handleTopMoveStartCapture, true);\n      this.addEventListener(root, 'move', this.handleTopMove);\n      this.addEventListener(root, 'move', this.handleTopMoveCapture, true);\n      this.addEventListener(root, 'end', this.handleTopMoveEndCapture, true);\n\n      if (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n        this.addEventListener(root, 'contextmenu', this.handleTopMoveEndCapture);\n      }\n\n      if (this.options.enableKeyboardEvents) {\n        this.addEventListener(root, 'keydown', this.handleCancelOnEscape, true);\n      }\n    }\n  }, {\n    key: \"teardown\",\n    value: function teardown() {\n      var root = this.options.rootElement;\n\n      if (!root) {\n        return;\n      }\n\n      TouchBackendImpl.isSetUp = false;\n      this._mouseClientOffset = {};\n      this.removeEventListener(root, 'start', this.handleTopMoveStartCapture, true);\n      this.removeEventListener(root, 'start', this.handleTopMoveStart);\n      this.removeEventListener(root, 'move', this.handleTopMoveCapture, true);\n      this.removeEventListener(root, 'move', this.handleTopMove);\n      this.removeEventListener(root, 'end', this.handleTopMoveEndCapture, true);\n\n      if (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n        this.removeEventListener(root, 'contextmenu', this.handleTopMoveEndCapture);\n      }\n\n      if (this.options.enableKeyboardEvents) {\n        this.removeEventListener(root, 'keydown', this.handleCancelOnEscape, true);\n      }\n\n      this.uninstallSourceNodeRemovalObserver();\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(subject, event, handler, capture) {\n      var options = supportsPassive ? {\n        capture: capture,\n        passive: false\n      } : capture;\n      this.listenerTypes.forEach(function (listenerType) {\n        var evt = eventNames[listenerType][event];\n\n        if (evt) {\n          subject.addEventListener(evt, handler, options);\n        }\n      });\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(subject, event, handler, capture) {\n      var options = supportsPassive ? {\n        capture: capture,\n        passive: false\n      } : capture;\n      this.listenerTypes.forEach(function (listenerType) {\n        var evt = eventNames[listenerType][event];\n\n        if (evt) {\n          subject.removeEventListener(evt, handler, options);\n        }\n      });\n    }\n  }, {\n    key: \"connectDragSource\",\n    value: function connectDragSource(sourceId, node) {\n      var _this2 = this;\n\n      var handleMoveStart = this.handleMoveStart.bind(this, sourceId);\n      this.sourceNodes.set(sourceId, node);\n      this.addEventListener(node, 'start', handleMoveStart);\n      return function () {\n        _this2.sourceNodes.delete(sourceId);\n\n        _this2.removeEventListener(node, 'start', handleMoveStart);\n      };\n    }\n  }, {\n    key: \"connectDragPreview\",\n    value: function connectDragPreview(sourceId, node, options) {\n      var _this3 = this;\n\n      this.sourcePreviewNodeOptions.set(sourceId, options);\n      this.sourcePreviewNodes.set(sourceId, node);\n      return function () {\n        _this3.sourcePreviewNodes.delete(sourceId);\n\n        _this3.sourcePreviewNodeOptions.delete(sourceId);\n      };\n    }\n  }, {\n    key: \"connectDropTarget\",\n    value: function connectDropTarget(targetId, node) {\n      var _this4 = this;\n\n      var root = this.options.rootElement;\n\n      if (!this.document || !root) {\n        return function () {\n          /* noop */\n        };\n      }\n\n      var handleMove = function handleMove(e) {\n        if (!_this4.document || !root || !_this4.monitor.isDragging()) {\n          return;\n        }\n\n        var coords;\n        /**\n         * Grab the coordinates for the current mouse/touch position\n         */\n\n        switch (e.type) {\n          case eventNames.mouse.move:\n            coords = {\n              x: e.clientX,\n              y: e.clientY\n            };\n            break;\n\n          case eventNames.touch.move:\n            coords = {\n              x: e.touches[0].clientX,\n              y: e.touches[0].clientY\n            };\n            break;\n        }\n        /**\n         * Use the coordinates to grab the element the drag ended on.\n         * If the element is the same as the target node (or any of it's children) then we have hit a drop target and can handle the move.\n         */\n\n\n        var droppedOn = coords != null ? _this4.document.elementFromPoint(coords.x, coords.y) : undefined;\n        var childMatch = droppedOn && node.contains(droppedOn);\n\n        if (droppedOn === node || childMatch) {\n          return _this4.handleMove(e, targetId);\n        }\n      };\n      /**\n       * Attaching the event listener to the body so that touchmove will work while dragging over multiple target elements.\n       */\n\n\n      this.addEventListener(this.document.body, 'move', handleMove);\n      this.targetNodes.set(targetId, node);\n      return function () {\n        if (_this4.document) {\n          _this4.targetNodes.delete(targetId);\n\n          _this4.removeEventListener(_this4.document.body, 'move', handleMove);\n        }\n      };\n    }\n  }, {\n    key: \"getTopMoveStartHandler\",\n    value: function getTopMoveStartHandler() {\n      if (!this.options.delayTouchStart && !this.options.delayMouseStart) {\n        return this.handleTopMoveStart;\n      }\n\n      return this.handleTopMoveStartDelay;\n    }\n  }, {\n    key: \"installSourceNodeRemovalObserver\",\n    value: function installSourceNodeRemovalObserver(node) {\n      var _this5 = this;\n\n      this.uninstallSourceNodeRemovalObserver();\n      this.draggedSourceNode = node;\n      this.draggedSourceNodeRemovalObserver = new MutationObserver(function () {\n        if (node && !node.parentElement) {\n          _this5.resurrectSourceNode();\n\n          _this5.uninstallSourceNodeRemovalObserver();\n        }\n      });\n\n      if (!node || !node.parentElement) {\n        return;\n      }\n\n      this.draggedSourceNodeRemovalObserver.observe(node.parentElement, {\n        childList: true\n      });\n    }\n  }, {\n    key: \"resurrectSourceNode\",\n    value: function resurrectSourceNode() {\n      if (this.document && this.draggedSourceNode) {\n        this.draggedSourceNode.style.display = 'none';\n        this.draggedSourceNode.removeAttribute('data-reactid');\n        this.document.body.appendChild(this.draggedSourceNode);\n      }\n    }\n  }, {\n    key: \"uninstallSourceNodeRemovalObserver\",\n    value: function uninstallSourceNodeRemovalObserver() {\n      if (this.draggedSourceNodeRemovalObserver) {\n        this.draggedSourceNodeRemovalObserver.disconnect();\n      }\n\n      this.draggedSourceNodeRemovalObserver = undefined;\n      this.draggedSourceNode = undefined;\n    }\n  }]);\n\n  return TouchBackendImpl;\n}();\n\n_defineProperty(TouchBackendImpl, \"isSetUp\", void 0);"]},"metadata":{},"sourceType":"module"}