{"ast":null,"code":"import _slicedToArray from \"/home/david/dev/tabs-treeview/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/david/dev/tabs-treeview/src/TreeView.tsx\";\nimport React, { useState } from \"react\";\nimport { StylesProvider, ThemeProvider } from \"@mui/styles\";\nimport CssBaseLine from \"@mui/material/CssBaseline\";\nimport { Tree } from \"@minoru/react-dnd-treeview\";\nimport { CustomNode } from \"./CustomNode\";\nimport { CustomDragPreview } from \"./CustomDragPreview\";\nimport { theme } from \"./theme\";\nimport { makeStyles } from '@mui/styles';\nimport SampleData from \"./sample_data.json\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    app: {\n      height: \"100%\"\n    },\n    treeRoot: {\n      height: \"100%\"\n    },\n    draggingSource: {\n      opacity: \".3\"\n    },\n    dropTarget: {\n      backgroundColor: \"#e8f0fe\"\n    }\n  };\n});\n\nfunction TreeView() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(SampleData),\n      _useState2 = _slicedToArray(_useState, 2),\n      treeData = _useState2[0],\n      setTreeData = _useState2[1];\n\n  var handleDrop = function handleDrop(newTree) {\n    return setTreeData(newTree);\n  };\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    injectFirst: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tree, {\n    tree: treeData,\n    rootId: 0,\n    render: function render(node, _ref) {\n      var depth = _ref.depth,\n          isOpen = _ref.isOpen,\n          onToggle = _ref.onToggle;\n      return /*#__PURE__*/React.createElement(CustomNode, {\n        node: node,\n        depth: depth,\n        isOpen: isOpen,\n        onToggle: onToggle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      });\n    },\n    dragPreviewRender: function dragPreviewRender(monitorProps) {\n      return /*#__PURE__*/React.createElement(CustomDragPreview, {\n        monitorProps: monitorProps,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 18\n        }\n      });\n    },\n    onDrop: handleDrop,\n    classes: {\n      root: classes.treeRoot,\n      draggingSource: classes.draggingSource,\n      dropTarget: classes.dropTarget\n    },\n    initialOpen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default TreeView;","map":{"version":3,"sources":["/home/david/dev/tabs-treeview/src/TreeView.tsx"],"names":["React","useState","StylesProvider","ThemeProvider","CssBaseLine","Tree","CustomNode","CustomDragPreview","theme","makeStyles","SampleData","useStyles","app","height","treeRoot","draggingSource","opacity","dropTarget","backgroundColor","TreeView","classes","treeData","setTreeData","handleDrop","newTree","node","depth","isOpen","onToggle","monitorProps","root"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,aAA9C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SACEC,IADF,QAIO,4BAJP;AAMA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACD,KAAD;AAAA,SAAmB;AAC9CI,IAAAA,GAAG,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL,KADyC;AAI9CC,IAAAA,QAAQ,EAAE;AACRD,MAAAA,MAAM,EAAE;AADA,KAJoC;AAO9CE,IAAAA,cAAc,EAAE;AACdC,MAAAA,OAAO,EAAE;AADK,KAP8B;AAU9CC,IAAAA,UAAU,EAAE;AACVC,MAAAA,eAAe,EAAE;AADP;AAVkC,GAAnB;AAAA,CAAD,CAA5B;;AAeA,SAASC,QAAT,GAAoB;AAAA;;AAClB,MAAMC,OAAO,GAAGT,SAAS,EAAzB;;AACA,kBAAgCV,QAAQ,CAAcS,UAAd,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD;AAAA,WAA0BF,WAAW,CAACE,OAAD,CAArC;AAAA,GAAnB;;AAEA,sBACE,oBAAC,cAAD;AAAgB,IAAA,WAAW,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEhB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACR,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAES,QADR;AAEE,IAAA,MAAM,EAAE,CAFV;AAGE,IAAA,MAAM,EAAE,gBACNI,IADM;AAAA,UAEJC,KAFI,QAEJA,KAFI;AAAA,UAEGC,MAFH,QAEGA,MAFH;AAAA,UAEWC,QAFX,QAEWA,QAFX;AAAA,0BAIN,oBAAC,UAAD;AACE,QAAA,IAAI,EAAEH,IADR;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,MAAM,EAAEC,MAHV;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJM;AAAA,KAHV;AAcE,IAAA,iBAAiB,EAAE,2BACjBC,YADiB;AAAA,0BAEd,oBAAC,iBAAD;AAAmB,QAAA,YAAY,EAAEA,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFc;AAAA,KAdrB;AAiBE,IAAA,MAAM,EAAEN,UAjBV;AAkBE,IAAA,OAAO,EAAE;AACPO,MAAAA,IAAI,EAAEV,OAAO,CAACN,QADP;AAEPC,MAAAA,cAAc,EAAEK,OAAO,CAACL,cAFjB;AAGPE,MAAAA,UAAU,EAAEG,OAAO,CAACH;AAHb,KAlBX;AAuBE,IAAA,WAAW,EAAE,IAvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF;AAkCD;;AAED,eAAeE,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { StylesProvider, ThemeProvider } from \"@mui/styles\";\nimport CssBaseLine from \"@mui/material/CssBaseline\";\nimport {\n  Tree,\n  NodeModel,\n  DragLayerMonitorProps,\n} from \"@minoru/react-dnd-treeview\";\nimport { CustomData } from \"./types\";\nimport { CustomNode } from \"./CustomNode\";\nimport { CustomDragPreview } from \"./CustomDragPreview\";\nimport { theme } from \"./theme\";\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material';\nimport SampleData from \"./sample_data.json\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  app: {\n    height: \"100%\",\n  },  \n  treeRoot: {\n    height: \"100%\",\n  },  \n  draggingSource: {\n    opacity: \".3\",\n  },  \n  dropTarget: {\n    backgroundColor: \"#e8f0fe\",\n  },\n}));\n\nfunction TreeView() {\n  const classes = useStyles();\n  const [treeData, setTreeData] = useState<NodeModel[]>(SampleData);\n  const handleDrop = (newTree: NodeModel[]) => setTreeData(newTree);\n\n  return (\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <CssBaseLine />\n        <div className={classes.app}>\n          <Tree\n            tree={treeData}\n            rootId={0}\n            render={(\n              node: NodeModel<CustomData>,\n              { depth, isOpen, onToggle }\n            ) => (\n              <CustomNode\n                node={node}\n                depth={depth}\n                isOpen={isOpen}\n                onToggle={onToggle}\n              />\n            )}\n            dragPreviewRender={(\n              monitorProps: DragLayerMonitorProps<CustomData>\n            ) => <CustomDragPreview monitorProps={monitorProps} />}\n            onDrop={handleDrop}\n            classes={{\n              root: classes.treeRoot,\n              draggingSource: classes.draggingSource,\n              dropTarget: classes.dropTarget,\n            }}\n            initialOpen={true}\n          />\n        </div>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n}\n\nexport default TreeView;\n"]},"metadata":{},"sourceType":"module"}